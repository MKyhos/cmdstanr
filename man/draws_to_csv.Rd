% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\name{draws_to_csv}
\alias{draws_to_csv}
\title{Write posterior draws objects to CSV files suitable for running standalone generated
quantities with CmdStan.}
\usage{
draws_to_csv(draws, sampler_diagnostics = NULL)
}
\arguments{
\item{draws}{A \verb{posterior::draws_*} object.}

\item{sampler_diagnostics}{Either \code{NULL} or a \verb{posterior::draws_*} object
of sampler diagnostics.}

\item{dir}{(string) An optional path to the directory where the CSV files will be
written. If not set, \link[base:tempfile]{temporary directory} is used.}

\item{basename}{(string) If \code{dir} is specified, `basename`` is used for naming
the output CSV files. If not specified, the file names are randomly generated.}
}
\value{
Paths to CSV files (one per chain).
}
\description{
Write posterior draws objects to CSV files suitable for running standalone generated
quantities with CmdStan.
}
\details{
\code{draws_to_csv()} generates a CSV suitable for running standalone generated
quantities with CmdStan. The CSV file contains a single comment \verb{#num_samples},
which equals the number of iterations in the supplied draws object.

The comment is followed by the column names. The first column is the \code{lp__} value,
followed by sampler diagnostics and finnaly other variables of the draws object.
#' If the draws object does not contain the \code{lp__} or sampler diagnostics variables,
columns with zeros are created in order to conform with the CmdStan requirements.
}
\examples{
\dontrun{
print_example_program("logistic")
fit_logistic_mcmc <- cmdstanr_example("logistic", chains = 2)
fit_logistic_mcmc$summary()

fit_logistic_optim <- cmdstanr_example("logistic", method = "optimize")
fit_logistic_optim$summary()

fit_logistic_vb <- cmdstanr_example("logistic", method = "variational")
fit_logistic_vb$summary()

print_example_program("schools")
fit_schools_mcmc <- cmdstanr_example("schools")
fit_schools_mcmc$summary()

print_example_program("schools_ncp")
fit_schools_ncp_mcmc <- cmdstanr_example("schools_ncp")
fit_schools_ncp_mcmc$summary()

# optimization fails for hierarchical model
cmdstanr_example("schools", "optimize", quiet = FALSE)
}

}
